package com.zcontent.init;

import com.google.gson.JsonObject;
import com.zcontent.config.ConfigLoader;
import com.zcontent.items.*;
import com.zcontent.items.tools.*;
import com.zcontent.util.JsonHelper;
import net.minecraft.creativetab.CreativeTabs;
import net.minecraft.item.*;
import net.minecraft.item.Item.ToolMaterial;
import net.minecraftforge.common.util.EnumHelper;

import java.util.ArrayList;
import java.util.List;


public class ModItems {

    public static final List<Item> ITEMS = new ArrayList<Item>();

    // Materials ("material_stainless", 3, 1561, 8.0F, 3.0F, 10);
    private static final JsonObject configMaterials = JsonHelper.getJsonObject(ConfigLoader.getConfig(), "materials");
    private static final JsonObject configMaterial_stainless = JsonHelper.getJsonObject(configMaterials, "material_stainless");
    private static final JsonObject configMaterial_silver_obsidian = JsonHelper.getJsonObject(configMaterials, "material_silver_obsidian");
    private static final JsonObject configMaterial_master = JsonHelper.getJsonObject(configMaterials, "material_master");
    private static final JsonObject configMaterial_elemental = JsonHelper.getJsonObject(configMaterials, "material_elemental");
    private static final JsonObject configMaterial_master_base = JsonHelper.getJsonObject(configMaterials, "material_master_base");
    public static ToolMaterial MATERIAL_STAINLESS;
    public static ToolMaterial MATERIAL_SILVER_OBSIDIAN;
    public static ToolMaterial MATERIAL_MASTER;
    public static ToolMaterial MATERIAL_ELEMENTAL;
    public static ToolMaterial MATERIAL_MASTER_BASE;
    // Items
    public static Item machineframe_1;
    public static Item machineframe_2;
    public static Item machineframe_3;
    public static Item machineframe;
    public static Item red_compound;
    public static Item blue_compound;
    public static Item red_alloy_ingot;
    public static Item blue_alloy_ingot;
    public static Item purple_alloy_ingot;
    public static Item graphite_ingot;
    public static Item zinc_ingot;
    public static Item manganese_ingot;
    public static Item chrome_ingot;
    public static Item brass_ingot;
    public static Item nichrome_ingot;
    public static Item galvanized_steel_ingot;
    public static Item stainless_steel_ingot;
    public static Item carbon_ingot;
    public static Item hot_iron_ingot;
    public static Item cold_iron_ingot;
    public static Item ardite_ingot;
    public static Item cobalt_ingot;
    public static Item manyullyn_ingot;
    public static Item terraglaz_ingot;
    public static Item evil_terraglaz_ingot;
    public static Item redstone_ball;
    public static Item substrate;
    public static Item polyethylene;
    public static Item biofuel;
    public static Item blue_mat_dust;
    public static Item purple_mat_dust;
    public static Item meteor_dust;
    public static Item et_frag;
    public static Item shaped_emerald;
    public static Item sulfur_crystal;
    public static Item animal_bones;
    public static Item vial;
    public static Item angel_wing;
    public static Item bat_wing;
    public static Item gold_feather;
    public static Item wither_bone;
    public static Item collector_star;
    public static Item collector_dark;
    public static Item collector_red;
    public static Item black_gem;
    public static Item blue_gem;
    public static Item green_gem;
    public static Item indigo_gem;
    public static Item orange_gem;
    public static Item red_gem;
    public static Item violet_gem;
    public static Item white_gem;
    public static Item yellow_gem;
    public static Item wood_plate;
    public static Item extended_tier1;
    public static Item extended_tier2;
    public static Item extended_tier3;
    public static Item extended_tier4;
    public static Item mold;
    public static Item mold_proc;
    public static Item carbon_fragment;
    public static Item carbon_mesh;
    public static Item carbon_panel;
    public static Item ancientdebris_chunk;
    public static Item andesite_chunk;
    public static Item basalt_chunk;
    public static Item clay_chunk;
    public static Item dirt_chunk;
    public static Item diorite_chunk;
    public static Item end_chunk;
    public static Item granite_chunk;
    public static Item gravel_chunk;
    public static Item jasper_chunk;
    public static Item limestone_chunk;
    public static Item marble_chunk;
    public static Item nether_chunk;
    public static Item obsidian_chunk;
    public static Item sand_chunk;
    public static Item slate_chunk;
    public static Item soulsand_chunk;
    public static Item soulstone_chunk;
    public static Item meteor_chunk;
    public static Item stone_chunk;
    public static Item combiner_core;
    public static Item dissolver_core;
    public static Item enderio_speed_upgrade_base;
    public static Item silicon_boule;
    public static Item silicon_wafer;
    public static Item transistor;
    public static Item alu;
    public static Item cu;
    public static Item rawcircuitboard;
    public static Item circuitboard;
    public static Item printedcircuitboard;
    public static Item card;
    public static Item proc_base;
    public static Item proc_raw_1;
    public static Item proc_raw_2;
    public static Item proc_raw_3;
    public static Item proc_1;
    public static Item proc_2;
    public static Item proc_3;
    public static Item chip1;
    public static Item chip2;
    public static Item chip3;
    public static Item componentbus1;
    public static Item componentbus2;
    public static Item componentbus3;
    public static Item cpu1;
    public static Item cpu2;
    public static Item cpu3;
    public static Item datacard1;
    public static Item datacard2;
    public static Item datacard3;
    public static Item graphicscard1;
    public static Item graphicscard2;
    public static Item graphicscard3;
    public static Item hdd1;
    public static Item hdd2;
    public static Item hdd3;
    public static Item ram1;
    public static Item ram2;
    public static Item ram3;
    public static Item server1;
    public static Item server2;
    public static Item server3;
    public static Item terminalserver;
    public static Item rf_fe_flux_power_energy;
    public static Item masterswordblade;
    public static Item masterswordcore;
    public static Item masterswordgrip;
    // Bad
    public static Item magic;
    public static Item enricheduranium;
    // Fuels
    private static final JsonObject configFuels = JsonHelper.getJsonObject(ConfigLoader.getConfig(), "fuels");
    private static final JsonObject configTinyCoal = JsonHelper.getJsonObject(configFuels, "tinyCoal");
    private static final JsonObject configTinyCharcoal = JsonHelper.getJsonObject(configFuels, "tinyCharcoal");
    public static Item coal_tiny_small;
    public static Item charcoal_tiny_small;
    // Food
    public static Item pill_antidote;
    // Fertilizer
    public static Item magic_fertilizer;
    public static Item withered_bone_meal;
    // Shiny base
    public static Item charged_gunpowder;
    public static Item halcyon_shard;
    // Shiny enchant tomes
    public static Item luck;
    public static Item nightvision;
    public static Item regeneration;
    public static Item resistance;
    public static Item saturation;
    public static Item strength;
    public static Item waterbreathing;
    public static Item absorption;
    public static Item antidote;
    public static Item fireresistance;
    public static Item glowing;
    public static Item haste;
    public static Item instanthealth;
    public static Item invisibility;
    public static Item jumpboost;
    public static Item levitation;
    public static Item speed;
    public static Item thunder;
    public static Item paralysis;
    public static Item instantkill;
    public static Item disarm;
    public static Item weaken;
    public static Item fertilizer;
    // Repair gem
    public static Item repairer;
    // Tools
    private static final JsonObject configTools = JsonHelper.getJsonObject(ConfigLoader.getConfig(), "tools");
    private static final JsonObject configStainless_steel_sword = JsonHelper.getJsonObject(configTools, "stainless_steel_sword");
    private static final JsonObject configStainless_steel_pick = JsonHelper.getJsonObject(configTools, "stainless_steel_pick");
    private static final JsonObject configStainless_steel_shovel = JsonHelper.getJsonObject(configTools, "stainless_steel_shovel");
    private static final JsonObject configStainless_steel_axe = JsonHelper.getJsonObject(configTools, "stainless_steel_axe");
    private static final JsonObject configSilver_obsidian_axe = JsonHelper.getJsonObject(configTools, "silver_obsidian_axe");

    public static ItemSword stainless_steel_sword;
    public static ItemPickaxe stainless_steel_pick;
    public static ItemSpade stainless_steel_shovel;
    public static ItemAxe stainless_steel_axe;

    public static ItemSword silver_obsidian_sword;
    public static ItemPickaxe silver_obsidian_pick;
    public static ItemSpade silver_obsidian_shovel;
    public static ItemAxe silver_obsidian_axe;

    public static ItemSword firesword;
    public static ItemSword icesword;
    public static ItemSword mastersword1;
    public static ItemSword mastersword2;
    // Wands
    private static final JsonObject configWands = JsonHelper.getJsonObject(ConfigLoader.getConfig(), "wands");
    private static final JsonObject configExcavation_wand = JsonHelper.getJsonObject(configWands, "excavation_wand");
    private static final JsonObject configWand_1 = JsonHelper.getJsonObject(configWands, "wand_1");
    private static final JsonObject configWand_2 = JsonHelper.getJsonObject(configWands, "wand_2");
    private static final JsonObject configWand_3 = JsonHelper.getJsonObject(configWands, "wand_3");
    private static final JsonObject configWand_4 = JsonHelper.getJsonObject(configWands, "wand_4");
    public static Item excavation_wand;
    public static Item wand_1;
    public static Item wand_2;
    public static Item wand_3;
    public static Item wand_4;


    public static void init() {
        MATERIAL_STAINLESS = EnumHelper.addToolMaterial("material_stainless",              JsonHelper.getJsonPrimitiveAsInt(configMaterial_stainless,      "harvestLevel"), JsonHelper.getJsonPrimitiveAsInt(configMaterial_stainless,      "maxUses"),    JsonHelper.getJsonPrimitiveAsFloat(configMaterial_stainless,      "efficiency"), JsonHelper.getJsonPrimitiveAsFloat(configMaterial_stainless,      "damage"), JsonHelper.getJsonPrimitiveAsInt(configMaterial_stainless,      "enchantability"));
        MATERIAL_SILVER_OBSIDIAN = EnumHelper.addToolMaterial("material_silver_obsidian",  JsonHelper.getJsonPrimitiveAsInt(configMaterial_silver_obsidian,"harvestLevel"), JsonHelper.getJsonPrimitiveAsInt(configMaterial_silver_obsidian,"maxUses"),    JsonHelper.getJsonPrimitiveAsFloat(configMaterial_silver_obsidian,"efficiency"), JsonHelper.getJsonPrimitiveAsFloat(configMaterial_silver_obsidian,"damage"), JsonHelper.getJsonPrimitiveAsInt(configMaterial_silver_obsidian,"enchantability"));
        MATERIAL_MASTER = EnumHelper.addToolMaterial("material_master",                    JsonHelper.getJsonPrimitiveAsInt(configMaterial_master,         "harvestLevel"), JsonHelper.getJsonPrimitiveAsInt(configMaterial_master,         "maxUses"),    JsonHelper.getJsonPrimitiveAsFloat(configMaterial_master,         "efficiency"), JsonHelper.getJsonPrimitiveAsFloat(configMaterial_master,         "damage"), JsonHelper.getJsonPrimitiveAsInt(configMaterial_master,         "enchantability"));
        MATERIAL_ELEMENTAL = EnumHelper.addToolMaterial("material_elemental",              JsonHelper.getJsonPrimitiveAsInt(configMaterial_elemental,      "harvestLevel"), JsonHelper.getJsonPrimitiveAsInt(configMaterial_elemental,      "maxUses"),    JsonHelper.getJsonPrimitiveAsFloat(configMaterial_elemental,      "efficiency"), JsonHelper.getJsonPrimitiveAsFloat(configMaterial_elemental,      "damage"), JsonHelper.getJsonPrimitiveAsInt(configMaterial_elemental,      "enchantability"));
        MATERIAL_MASTER_BASE = EnumHelper.addToolMaterial("material_master_base",          JsonHelper.getJsonPrimitiveAsInt(configMaterial_master_base,    "harvestLevel"), JsonHelper.getJsonPrimitiveAsInt(configMaterial_master_base,    "maxUses"),    JsonHelper.getJsonPrimitiveAsFloat(configMaterial_master_base,    "efficiency"), JsonHelper.getJsonPrimitiveAsFloat(configMaterial_master_base,    "damage"), JsonHelper.getJsonPrimitiveAsInt(configMaterial_master_base,    "enchantability"));
        // Items
        machineframe_1 = new ItemBase("machineframe_1", CreativeTabs.MATERIALS);
        machineframe_2 = new ItemBase("machineframe_2", CreativeTabs.MATERIALS);
        machineframe_3 = new ItemBase("machineframe_3", CreativeTabs.MATERIALS);
        machineframe = new ItemBase("machineframe", CreativeTabs.MATERIALS);
        red_compound = new ItemBase("red_compound", CreativeTabs.MATERIALS);
        blue_compound = new ItemBase("blue_compound", CreativeTabs.MATERIALS);
        red_alloy_ingot = new ItemBase("red_alloy_ingot", CreativeTabs.MATERIALS);
        blue_alloy_ingot = new ItemBase("blue_alloy_ingot", CreativeTabs.MATERIALS);
        purple_alloy_ingot = new ItemBase("purple_alloy_ingot", CreativeTabs.MATERIALS);
        graphite_ingot = new ItemBase("graphite_ingot", CreativeTabs.MATERIALS);
        zinc_ingot = new ItemBase("zinc_ingot", CreativeTabs.MATERIALS);
        manganese_ingot = new ItemBase("manganese_ingot", CreativeTabs.MATERIALS);
        chrome_ingot = new ItemBase("chrome_ingot", CreativeTabs.MATERIALS);
        brass_ingot = new ItemBase("brass_ingot", CreativeTabs.MATERIALS);
        nichrome_ingot = new ItemBase("nichrome_ingot", CreativeTabs.MATERIALS);
        galvanized_steel_ingot = new ItemBase("galvanized_steel_ingot", CreativeTabs.MATERIALS);
        stainless_steel_ingot = new ItemBase("stainless_steel_ingot", CreativeTabs.MATERIALS);
        carbon_ingot = new ItemBase("carbon_ingot", CreativeTabs.MATERIALS);
        hot_iron_ingot = new ItemBase("hot_iron_ingot", CreativeTabs.MATERIALS);
        cold_iron_ingot = new ItemBase("cold_iron_ingot", CreativeTabs.MATERIALS);
        ardite_ingot = new ItemBase("ardite_ingot", CreativeTabs.MATERIALS);
        cobalt_ingot = new ItemBase("cobalt_ingot", CreativeTabs.MATERIALS);
        manyullyn_ingot = new ItemBase("manyullyn_ingot", CreativeTabs.MATERIALS);
        terraglaz_ingot = new ItemBase("terraglaz_ingot", CreativeTabs.MATERIALS);
        evil_terraglaz_ingot = new ItemBase("evil_terraglaz_ingot", CreativeTabs.MATERIALS);
        redstone_ball = new ItemBase("redstone_ball", CreativeTabs.MATERIALS);
        substrate = new ItemBase("substrate", CreativeTabs.MATERIALS);
        polyethylene = new ItemBase("polyethylene", CreativeTabs.MATERIALS);
        biofuel = new ItemBase("biofuel", CreativeTabs.MATERIALS);
        blue_mat_dust = new ItemBase("blue_mat_dust", CreativeTabs.MATERIALS);
        purple_mat_dust = new ItemBase("purple_mat_dust", CreativeTabs.MATERIALS);
        meteor_dust = new ItemBase("meteor_dust", CreativeTabs.MATERIALS);
        et_frag = new ItemBase("et_frag", CreativeTabs.MATERIALS);
        shaped_emerald = new ItemBase("shaped_emerald", CreativeTabs.MATERIALS);
        sulfur_crystal = new ItemBase("sulfur_crystal", CreativeTabs.MATERIALS);
        animal_bones = new ItemBase("animal_bones", CreativeTabs.MATERIALS);
        vial = new ItemBase("vial", CreativeTabs.MATERIALS);
        angel_wing = new ItemBase("angel_wing", CreativeTabs.MATERIALS);
        bat_wing = new ItemBase("bat_wing", CreativeTabs.MATERIALS);
        gold_feather = new ItemBase("gold_feather", CreativeTabs.MATERIALS);
        wither_bone = new ItemBase("wither_bone", CreativeTabs.MATERIALS);
        collector_star = new ItemBase("collector_star", CreativeTabs.MATERIALS);
        collector_dark = new ItemBase("collector_dark", CreativeTabs.MATERIALS);
        collector_red = new ItemBase("collector_red", CreativeTabs.MATERIALS);
        black_gem = new ItemBase("black_gem", CreativeTabs.MATERIALS);
        blue_gem = new ItemBase("blue_gem", CreativeTabs.MATERIALS);
        green_gem = new ItemBase("green_gem", CreativeTabs.MATERIALS);
        indigo_gem = new ItemBase("indigo_gem", CreativeTabs.MATERIALS);
        orange_gem = new ItemBase("orange_gem", CreativeTabs.MATERIALS);
        red_gem = new ItemBase("red_gem", CreativeTabs.MATERIALS);
        violet_gem = new ItemBase("violet_gem", CreativeTabs.MATERIALS);
        white_gem = new ItemBase("white_gem", CreativeTabs.MATERIALS);
        yellow_gem = new ItemBase("yellow_gem", CreativeTabs.MATERIALS);
        wood_plate = new ItemBase("wood_plate", CreativeTabs.MATERIALS);
        extended_tier1 = new ItemBase("extended_tier1", CreativeTabs.MATERIALS);
        extended_tier2 = new ItemBase("extended_tier2", CreativeTabs.MATERIALS);
        extended_tier3 = new ItemBase("extended_tier3", CreativeTabs.MATERIALS);
        extended_tier4 = new ItemBase("extended_tier4", CreativeTabs.MATERIALS);
        mold = new ItemBase("mold", CreativeTabs.MATERIALS);
        mold_proc = new ItemBase("mold_proc", CreativeTabs.MATERIALS);
        carbon_fragment = new ItemBase("carbon_fragment", CreativeTabs.MATERIALS);
        carbon_mesh = new ItemBase("carbon_mesh", CreativeTabs.MATERIALS);
        carbon_panel = new ItemBase("carbon_panel", CreativeTabs.MATERIALS);
        ancientdebris_chunk = new ItemBase("ancientdebris_chunk", CreativeTabs.MATERIALS);
        andesite_chunk = new ItemBase("andesite_chunk", CreativeTabs.MATERIALS);
        basalt_chunk = new ItemBase("basalt_chunk", CreativeTabs.MATERIALS);
        clay_chunk = new ItemBase("clay_chunk", CreativeTabs.MATERIALS);
        dirt_chunk = new ItemBase("dirt_chunk", CreativeTabs.MATERIALS);
        diorite_chunk = new ItemBase("diorite_chunk", CreativeTabs.MATERIALS);
        end_chunk = new ItemBase("end_chunk", CreativeTabs.MATERIALS);
        granite_chunk = new ItemBase("granite_chunk", CreativeTabs.MATERIALS);
        gravel_chunk = new ItemBase("gravel_chunk", CreativeTabs.MATERIALS);
        jasper_chunk = new ItemBase("jasper_chunk", CreativeTabs.MATERIALS);
        limestone_chunk = new ItemBase("limestone_chunk", CreativeTabs.MATERIALS);
        marble_chunk = new ItemBase("marble_chunk", CreativeTabs.MATERIALS);
        nether_chunk = new ItemBase("nether_chunk", CreativeTabs.MATERIALS);
        obsidian_chunk = new ItemBase("obsidian_chunk", CreativeTabs.MATERIALS);
        sand_chunk = new ItemBase("sand_chunk", CreativeTabs.MATERIALS);
        slate_chunk = new ItemBase("slate_chunk", CreativeTabs.MATERIALS);
        soulsand_chunk = new ItemBase("soulsand_chunk", CreativeTabs.MATERIALS);
        soulstone_chunk = new ItemBase("soulstone_chunk", CreativeTabs.MATERIALS);
        meteor_chunk = new ItemBase("meteor_chunk", CreativeTabs.MATERIALS);
        stone_chunk = new ItemBase("stone_chunk", CreativeTabs.MATERIALS);
        combiner_core = new ItemBase("combiner_core", CreativeTabs.MATERIALS);
        dissolver_core = new ItemBase("dissolver_core", CreativeTabs.MATERIALS);
        enderio_speed_upgrade_base = new ItemBase("enderio_speed_upgrade_base", CreativeTabs.MATERIALS);
        silicon_boule = new ItemBase("silicon_boule", CreativeTabs.MATERIALS);
        silicon_wafer = new ItemBase("silicon_wafer", CreativeTabs.MATERIALS);
        transistor = new ItemBase("transistor", CreativeTabs.MATERIALS);
        alu = new ItemBase("alu", CreativeTabs.MATERIALS);
        cu = new ItemBase("cu", CreativeTabs.MATERIALS);
        rawcircuitboard = new ItemBase("rawcircuitboard", CreativeTabs.MATERIALS);
        circuitboard = new ItemBase("circuitboard", CreativeTabs.MATERIALS);
        printedcircuitboard = new ItemBase("printedcircuitboard", CreativeTabs.MATERIALS);
        card = new ItemBase("card", CreativeTabs.MATERIALS);
        proc_base = new ItemBase("proc_base", CreativeTabs.MATERIALS);
        proc_raw_1 = new ItemBase("proc_raw_1", CreativeTabs.MATERIALS);
        proc_raw_2 = new ItemBase("proc_raw_2", CreativeTabs.MATERIALS);
        proc_raw_3 = new ItemBase("proc_raw_3", CreativeTabs.MATERIALS);
        proc_1 = new ItemBase("proc_1", CreativeTabs.MATERIALS);
        proc_2 = new ItemBase("proc_2", CreativeTabs.MATERIALS);
        proc_3 = new ItemBase("proc_3", CreativeTabs.MATERIALS);
        chip1 = new ItemBase("chip1", CreativeTabs.MATERIALS);
        chip2 = new ItemBase("chip2", CreativeTabs.MATERIALS);
        chip3 = new ItemBase("chip3", CreativeTabs.MATERIALS);
        componentbus1 = new ItemBase("componentbus1", CreativeTabs.MATERIALS);
        componentbus2 = new ItemBase("componentbus2", CreativeTabs.MATERIALS);
        componentbus3 = new ItemBase("componentbus3", CreativeTabs.MATERIALS);
        cpu1 = new ItemBase("cpu1", CreativeTabs.MATERIALS);
        cpu2 = new ItemBase("cpu2", CreativeTabs.MATERIALS);
        cpu3 = new ItemBase("cpu3", CreativeTabs.MATERIALS);
        datacard1 = new ItemBase("datacard1", CreativeTabs.MATERIALS);
        datacard2 = new ItemBase("datacard2", CreativeTabs.MATERIALS);
        datacard3 = new ItemBase("datacard3", CreativeTabs.MATERIALS);
        graphicscard1 = new ItemBase("graphicscard1", CreativeTabs.MATERIALS);
        graphicscard2 = new ItemBase("graphicscard2", CreativeTabs.MATERIALS);
        graphicscard3 = new ItemBase("graphicscard3", CreativeTabs.MATERIALS);
        hdd1 = new ItemBase("hdd1", CreativeTabs.MATERIALS);
        hdd2 = new ItemBase("hdd2", CreativeTabs.MATERIALS);
        hdd3 = new ItemBase("hdd3", CreativeTabs.MATERIALS);
        ram1 = new ItemBase("ram1", CreativeTabs.MATERIALS);
        ram2 = new ItemBase("ram2", CreativeTabs.MATERIALS);
        ram3 = new ItemBase("ram3", CreativeTabs.MATERIALS);
        server1 = new ItemBase("server1", CreativeTabs.MATERIALS);
        server2 = new ItemBase("server2", CreativeTabs.MATERIALS);
        server3 = new ItemBase("server3", CreativeTabs.MATERIALS);
        terminalserver = new ItemBase("terminalserver", CreativeTabs.MATERIALS);
        rf_fe_flux_power_energy = new ItemBase("rf_fe_flux_power_energy", CreativeTabs.MATERIALS);
        masterswordblade = new ItemBase("masterswordblade", CreativeTabs.MATERIALS);
        masterswordcore = new ItemBase("masterswordcore", CreativeTabs.MATERIALS);
        masterswordgrip = new ItemBase("masterswordgrip", CreativeTabs.MATERIALS);
        // Bad
        magic = new ItemBad("magic", CreativeTabs.MATERIALS);
        enricheduranium = new ItemBad("enricheduranium", CreativeTabs.MATERIALS);
        // Fuels
        coal_tiny_small = new ItemFuel("coal_tiny_small", CreativeTabs.MATERIALS,  JsonHelper.getJsonPrimitiveAsInt(configTinyCoal, "burnTime"));
        charcoal_tiny_small = new ItemFuel("charcoal_tiny_small", CreativeTabs.MATERIALS,  JsonHelper.getJsonPrimitiveAsInt(configTinyCharcoal, "burnTime"));
        // Food
        pill_antidote = new ItemAntidote("pill_antidote", CreativeTabs.FOOD, 0, 0.0f, false);
        // Fertilizer
        magic_fertilizer = new ItemFertilizer("magic_fertilizer", CreativeTabs.MATERIALS);
        withered_bone_meal = new ItemFertilizerWithered("withered_bone_meal", CreativeTabs.MATERIALS);
        // Shiny base
        charged_gunpowder = new ItemGlowing("charged_gunpowder", CreativeTabs.MATERIALS);
        halcyon_shard = new ItemGlowing("halcyon_shard", CreativeTabs.MATERIALS);
        // Shiny enchant tomes
        luck = new ItemGlowing("luck", CreativeTabs.MATERIALS);
        nightvision = new ItemGlowing("nightvision", CreativeTabs.MATERIALS);
        regeneration = new ItemGlowing("regeneration", CreativeTabs.MATERIALS);
        resistance = new ItemGlowing("resistance", CreativeTabs.MATERIALS);
        saturation = new ItemGlowing("saturation", CreativeTabs.MATERIALS);
        strength = new ItemGlowing("strength", CreativeTabs.MATERIALS);
        waterbreathing = new ItemGlowing("waterbreathing", CreativeTabs.MATERIALS);
        absorption = new ItemGlowing("absorption", CreativeTabs.MATERIALS);
        antidote = new ItemGlowing("antidote", CreativeTabs.MATERIALS);
        fireresistance = new ItemGlowing("fireresistance", CreativeTabs.MATERIALS);
        glowing = new ItemGlowing("glowing", CreativeTabs.MATERIALS);
        haste = new ItemGlowing("haste", CreativeTabs.MATERIALS);
        instanthealth = new ItemGlowing("instanthealth", CreativeTabs.MATERIALS);
        invisibility = new ItemGlowing("invisibility", CreativeTabs.MATERIALS);
        jumpboost = new ItemGlowing("jumpboost", CreativeTabs.MATERIALS);
        levitation = new ItemGlowing("levitation", CreativeTabs.MATERIALS);
        speed = new ItemGlowing("speed", CreativeTabs.MATERIALS);
        thunder = new ItemGlowing("thunder", CreativeTabs.MATERIALS);
        paralysis = new ItemGlowing("paralysis", CreativeTabs.MATERIALS);
        instantkill = new ItemGlowing("instantkill", CreativeTabs.MATERIALS);
        disarm = new ItemGlowing("disarm", CreativeTabs.MATERIALS);
        weaken = new ItemGlowing("weaken", CreativeTabs.MATERIALS);
        fertilizer = new ItemGlowing("fertilizer", CreativeTabs.MATERIALS);
        // Repair gem
        repairer = new ItemRepair("repairer", CreativeTabs.MATERIALS);
        // Tools
        stainless_steel_sword = new ToolSwordWithAttributes("stainless_steel_sword", CreativeTabs.COMBAT, MATERIAL_STAINLESS,   JsonHelper.getJsonPrimitiveAsInt(configStainless_steel_sword, "rangeBoostMainHand"), JsonHelper.getJsonPrimitiveAsInt(configStainless_steel_sword, "rangeBoostOffHand"));
        stainless_steel_pick = new ToolPickWithAttributes("stainless_steel_pick", CreativeTabs.TOOLS, MATERIAL_STAINLESS,       JsonHelper.getJsonPrimitiveAsInt(configStainless_steel_pick,  "rangeBoostMainHand"), JsonHelper.getJsonPrimitiveAsInt(configStainless_steel_pick,  "rangeBoostOffHand"));
        stainless_steel_shovel = new ToolShovelWithAttributes("stainless_steel_shovel", CreativeTabs.TOOLS, MATERIAL_STAINLESS, JsonHelper.getJsonPrimitiveAsInt(configStainless_steel_shovel,"rangeBoostMainHand"), JsonHelper.getJsonPrimitiveAsInt(configStainless_steel_shovel,"rangeBoostOffHand"));
        stainless_steel_axe = new ToolAxeWithAttributes("stainless_steel_axe", CreativeTabs.TOOLS, MATERIAL_STAINLESS,          JsonHelper.getJsonPrimitiveAsFloat(configStainless_steel_axe,   "damage"),           JsonHelper.getJsonPrimitiveAsFloat(configStainless_steel_axe, "speed"), JsonHelper.getJsonPrimitiveAsInt(configStainless_steel_axe,   "rangeBoostMainHand"), JsonHelper.getJsonPrimitiveAsInt(configStainless_steel_axe,   "rangeBoostOffHand"));
        silver_obsidian_sword = new ToolSwordBase("silver_obsidian_sword", CreativeTabs.COMBAT, MATERIAL_SILVER_OBSIDIAN);
        silver_obsidian_pick = new ToolPickBase("silver_obsidian_pick", CreativeTabs.TOOLS, MATERIAL_SILVER_OBSIDIAN);
        silver_obsidian_shovel = new ToolShovelBase("silver_obsidian_shovel", CreativeTabs.TOOLS, MATERIAL_SILVER_OBSIDIAN);
        silver_obsidian_axe = new ToolAxeBase("silver_obsidian_axe", CreativeTabs.TOOLS, MATERIAL_SILVER_OBSIDIAN, JsonHelper.getJsonPrimitiveAsFloat(configSilver_obsidian_axe, "damage"), JsonHelper.getJsonPrimitiveAsFloat(configSilver_obsidian_axe, "speed"));
        firesword = new ToolElementalSword("firesword", CreativeTabs.COMBAT, MATERIAL_ELEMENTAL);
        icesword = new ToolElementalSword("icesword", CreativeTabs.COMBAT, MATERIAL_ELEMENTAL);
        mastersword1 = new ToolSwordBase("mastersword1", CreativeTabs.COMBAT, MATERIAL_MASTER_BASE);
        mastersword2 = new ToolMasterSword("mastersword2", CreativeTabs.COMBAT, MATERIAL_MASTER);
        // Wands
        excavation_wand = new ItemWandBase("excavation_wand", CreativeTabs.MATERIALS, JsonHelper.getJsonPrimitiveAsInt(configExcavation_wand, "rangeBoostMainHand"), JsonHelper.getJsonPrimitiveAsInt(configExcavation_wand, "rangeBoostOffHand"));
        wand_1 = new ItemWandBase("wand_1", CreativeTabs.MATERIALS, JsonHelper.getJsonPrimitiveAsInt(configWand_1, "rangeBoostMainHand"), JsonHelper.getJsonPrimitiveAsInt(configWand_1, "rangeBoostOffHand"));
        wand_2 = new ItemWandBase("wand_2", CreativeTabs.MATERIALS, JsonHelper.getJsonPrimitiveAsInt(configWand_2, "rangeBoostMainHand"), JsonHelper.getJsonPrimitiveAsInt(configWand_2, "rangeBoostOffHand"));
        wand_3 = new ItemWandBase("wand_3", CreativeTabs.MATERIALS, JsonHelper.getJsonPrimitiveAsInt(configWand_3, "rangeBoostMainHand"), JsonHelper.getJsonPrimitiveAsInt(configWand_3, "rangeBoostOffHand"));
        wand_4 = new ItemWandBase("wand_4", CreativeTabs.MATERIALS, JsonHelper.getJsonPrimitiveAsInt(configWand_4, "rangeBoostMainHand"), JsonHelper.getJsonPrimitiveAsInt(configWand_4, "rangeBoostOffHand"));

    }
    

}
